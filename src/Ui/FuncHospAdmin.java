/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Ui;

import Model.Doctor;
import Model.DoctorDirectory;
import Model.Encounter;
import Model.EncounterDirectory;
import Model.Patient;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author riddhivora
 */
public class FuncHospAdmin extends javax.swing.JPanel {

    /**
     * Creates new form FuncHospAdmin
     */
     DoctorDirectory doctor;
    PatientDirectory patient;
    EncounterDirectory encounterhis;
    
    public FuncHospAdmin(DoctorDirectory doctor, PatientDirectory patient, EncounterDirectory encounterhis) {
        initComponents();
        this.doctor = doctor; //to store info
        this.patient = patient;
        this.encounterhis = encounterhis;
        populateDocTable();
        populatePatTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDocView = new javax.swing.JButton();
        lblDTitle = new javax.swing.JLabel();
        lblHosp = new javax.swing.JLabel();
        lblDocName = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        errDocName = new javax.swing.JLabel();
        txtDocCity = new javax.swing.JTextField();
        txtDocHosp = new javax.swing.JTextField();
        lblDocCity = new javax.swing.JLabel();
        errDocCity = new javax.swing.JLabel();
        lblDocCom = new javax.swing.JLabel();
        txtDocCom = new javax.swing.JTextField();
        errDocCom = new javax.swing.JLabel();
        btnDocSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoc = new javax.swing.JTable();
        errCity = new javax.swing.JLabel();
        errAge = new javax.swing.JLabel();
        errCom = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPat = new javax.swing.JTable();
        txtAge = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtComm = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtBP = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtPulse = new javax.swing.JTextField();
        lblComm = new javax.swing.JLabel();
        txtTemp = new javax.swing.JTextField();
        lblBP = new javax.swing.JLabel();
        txtRespRate = new javax.swing.JTextField();
        lblPulse = new javax.swing.JLabel();
        lblTemp = new javax.swing.JLabel();
        lblRespRate = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        errName = new javax.swing.JLabel();
        lblPTitle = new javax.swing.JLabel();
        btnPatView = new javax.swing.JButton();
        btnPatUpdate = new javax.swing.JButton();
        btnPatDelete = new javax.swing.JButton();
        btnSavePat = new javax.swing.JButton();

        btnDocView.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        btnDocView.setText("VIEW");
        btnDocView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocViewActionPerformed(evt);
            }
        });

        lblDTitle.setBackground(new java.awt.Color(153, 153, 153));
        lblDTitle.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblDTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDTitle.setText(" DOCTOR DETAILS");

        lblHosp.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblHosp.setText("Hospital:");

        lblDocName.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblDocName.setText("Name:");

        txtDocName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDocNameKeyReleased(evt);
            }
        });

        errDocName.setForeground(new java.awt.Color(255, 51, 51));

        txtDocCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDocCityKeyReleased(evt);
            }
        });

        lblDocCity.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblDocCity.setText("City:");

        errDocCity.setForeground(new java.awt.Color(255, 51, 51));

        lblDocCom.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblDocCom.setText("Community:");

        txtDocCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDocComKeyReleased(evt);
            }
        });

        errDocCom.setForeground(new java.awt.Color(255, 51, 51));

        btnDocSave.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        btnDocSave.setText("SAVE DETAILS");
        btnDocSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocSaveActionPerformed(evt);
            }
        });

        tblDoc.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        tblDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "City", "Community", "Hospital"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoc.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblDoc);

        errCity.setForeground(new java.awt.Color(255, 51, 51));

        errAge.setForeground(new java.awt.Color(255, 0, 0));

        errCom.setForeground(new java.awt.Color(255, 51, 51));

        tblPat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "City", "Community", "BP", "Pulse", "Body Temp", "Respiration Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPat);

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblName.setText("Name:");

        lblAge.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblAge.setText("Age:");

        txtBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBPActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblCity.setText("City:");

        lblComm.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblComm.setText("Community:");

        lblBP.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblBP.setText("Blood Pressure:");

        lblPulse.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblPulse.setText("Pulse:");

        lblTemp.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblTemp.setText("Body Temperature:");

        lblRespRate.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lblRespRate.setText("Respiration Rate:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        errName.setForeground(new java.awt.Color(255, 51, 51));

        lblPTitle.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblPTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPTitle.setText("PATIENT DETAILS");

        btnPatView.setText("VIEW");
        btnPatView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatViewActionPerformed(evt);
            }
        });

        btnPatUpdate.setText("UPDATE");
        btnPatUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatUpdateActionPerformed(evt);
            }
        });

        btnPatDelete.setText("DELETE");
        btnPatDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatDeleteActionPerformed(evt);
            }
        });

        btnSavePat.setText("SAVE DETAILS");
        btnSavePat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblComm))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAge, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCity, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtComm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addComponent(errName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTemp)
                            .addComponent(lblRespRate))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(errCity, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(errCom, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(errAge, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblBP)
                                .addComponent(lblPulse))
                            .addGap(52, 52, 52)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSavePat)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPatUpdate)
                            .addComponent(btnPatDelete)
                            .addComponent(btnPatView, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblPTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 194, Short.MAX_VALUE)
                                .addComponent(btnDocSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                                .addComponent(btnDocView))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(lblDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(errDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(errDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblDocCom)
                                                    .addComponent(lblHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtDocHosp, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                                    .addComponent(txtDocCom))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(errDocCom, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblDTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDocName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDocName))
                            .addComponent(errDocName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDocCity))
                            .addComponent(errDocCity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDocCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDocCom))
                            .addComponent(errDocCom, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDocHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHosp))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDocSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDocView, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(lblPTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(errName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblName)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblBP)
                                .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblAge)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPulse)
                                .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(errAge, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCity)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTemp))
                            .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(errCom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblComm)
                                    .addComponent(txtComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRespRate)
                                    .addComponent(errCity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPatView, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPatUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPatDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSavePat)
                        .addGap(1, 1, 1)))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDocViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocViewActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblDoc.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to View.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoc.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex,0);

        txtDocName.setText(selectedDoctor.getName());
        txtDocCity.setText(selectedDoctor.getCity());
        txtDocCom.setText(selectedDoctor.getCommunity());

    }//GEN-LAST:event_btnDocViewActionPerformed

    private void txtDocNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocNameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z ]{2,30}$"; //standard string expression
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtDocName.getText());
        if(!match.matches()){
            errDocName.setText("Enter a valid Naming convention!");
        }
        else{
            errDocName.setText(null);
        }
    }//GEN-LAST:event_txtDocNameKeyReleased

    private void txtDocCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocCityKeyReleased
        // TODO add your handling code here:

        String PATTERN = "^[a-zA-Z ,.'-]{0,30}$";       //supports space charac, comma, -, '
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtDocCity.getText());
        if(!match.matches()){
            errDocCity.setText("City is invalid!");

        }
        else{
            errDocCity.setText(null);

        }
    }//GEN-LAST:event_txtDocCityKeyReleased

    private void txtDocComKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocComKeyReleased
        // TODO add your handling code here:

        String PATTERN = "^[a-zA-Z]{0,30}$";        //standard string expression
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtDocCom.getText());
        if(!match.matches()){
            errDocCom.setText("Community is invalid!");

        }
        else{
            errDocCom.setText(null);

        }
    }//GEN-LAST:event_txtDocComKeyReleased

    private void btnDocSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocSaveActionPerformed
        // TODO add your handling code here:
        String name = txtDocName.getText();
        String city = txtDocCity.getText();
        String community = txtDocCom.getText();
        String hospital = txtDocHosp.getText();

        Doctor d = doctor.addNewDoctor();

        d.setName(name);
        d.setCity(city);
        d.setCommunity(community);
        d.setHospital(hospital);

        JOptionPane.showMessageDialog(this, "New Doctor Details Added");

        txtDocName.setText("");
        txtDocCity.setText("");
        txtDocCom.setText("");
        txtDocHosp.setText("");
        populateDocTable();
    }//GEN-LAST:event_btnDocSaveActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBPActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnPatViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatViewActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblPat.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblPat.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        txtName.setText(selectedPatient.getName());
        txtAge.setText(String.valueOf(selectedPatient.getAge()));
        txtCity.setText(selectedPatient.getCity());
        txtComm.setText(selectedPatient.getCommunity());
        //vitals
        txtBP.setText(String.valueOf(selectedPatient.getBp()));
        txtPulse.setText(String.valueOf(selectedPatient.getPulse()));
        txtRespRate.setText(String.valueOf(selectedPatient.getResp_rate()));
        txtTemp.setText(String.valueOf(selectedPatient.getTemp()));
    }//GEN-LAST:event_btnPatViewActionPerformed

    private void btnPatUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatUpdateActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        int age = Integer.parseInt(txtAge.getText());
        String city = txtCity.getText();
        String community = txtComm.getText();

        int BP = Integer.parseInt(txtBP.getText());
        int pulse = Integer.parseInt(txtPulse.getText());
        int temp = Integer.parseInt(txtTemp.getText());
        int resp_rate = Integer.parseInt(txtRespRate.getText());

        Date date = new Date();

        int selectedRowIndex = tblPat.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
        }

        DefaultTableModel model = (DefaultTableModel) tblPat.getModel();

        String sno = model.getValueAt(selectedRowIndex, 0).toString();

        for(Patient patient : patient.getPatient()) {
            if(patient.getName().equals(sno)){
                patient.setAge(Integer.parseInt(txtAge.getText()));
                patient.setCity(txtCity.getText());
                patient.setCommunity(txtComm.getText());
                patient.setBp(Integer.parseInt(txtBP.getText()));
                patient.setPulse(Integer.parseInt(txtPulse.getText()));
                patient.setTemp(Integer.parseInt(txtTemp.getText()));
                patient.setResp_rate(Integer.parseInt(txtRespRate.getText()));

            }

        }
        populatePatTable();
        Encounter encounter = encounterhis.addNewEncounter();
        encounter.setName(name);
        encounter.setAge(age);
        encounter.setCity(city);
        encounter.setCommunity(community);
        encounter.setBp(BP);
        encounter.setPulse(pulse);
        encounter.setTemp(temp);
        encounter.setResp_rate(resp_rate);
        encounter.setDate(date);
    }//GEN-LAST:event_btnPatUpdateActionPerformed

    private void btnPatDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatDeleteActionPerformed
        // TODO add your handling code here:
        //making sure that a row is selected for it to be deleted
        int selectedRowIndex = tblPat.getSelectedRow();

        if (selectedRowIndex<0) {

            JOptionPane.showMessageDialog(this, "Please select a Row to Delete it.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPat.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        patient.deletePatient(selectedPatient);

        JOptionPane.showMessageDialog(this, "Patient Details Deleted.");

        populatePatTable();
        //clearing fields
        txtName.setText("");
        txtAge.setText("");
        txtCity.setText("");
        txtComm.setText("");
        txtPulse.setText("");
        txtRespRate.setText("");
        txtTemp.setText("");
        txtBP.setText("");

    }//GEN-LAST:event_btnPatDeleteActionPerformed

    private void btnSavePatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePatActionPerformed
        // TODO add your handling code here:

        String Name = txtName.getText();
        int Age = Integer.parseInt(txtAge.getText());
        String City = txtCity.getText();
        String Community = txtComm.getText();

        //Vitals
        int BP = Integer.parseInt(txtBP.getText());
        int temp = Integer.parseInt(txtTemp.getText());
        int pulse = Integer.parseInt(txtPulse.getText());
        int resp_rate = Integer.parseInt(txtRespRate.getText());
        Date date = new Date();

        Patient pt = patient.addNewPatient();
        Encounter encounter = encounterhis.addNewEncounter();

        pt.setName(Name);
        pt.setAge(Age);
        pt.setCommunity(Community);
        pt.setCity(City);

        //set vitals
        pt.setBp(BP);
        pt.setPulse(pulse);
        pt.setResp_rate(resp_rate);
        pt.setTemp(temp);

        //dialog box
        JOptionPane.showMessageDialog(this, "New Patient Details Added");

        //set encounter
        encounter.setName(Name);
        encounter.setAge(Age);
        encounter.setCity(City);
        encounter.setCommunity(Community);

        //set vitals in encounter
        encounter.setBp(BP);
        encounter.setResp_rate(resp_rate);
        encounter.setTemp(temp);
        encounter.setPulse(pulse);
        encounter.setDate(date);

        //clear text
        txtName.setText("");
        txtAge.setText("");
        txtCity.setText("");
        txtComm.setText("");
        txtPulse.setText("");
        txtRespRate.setText("");
        txtTemp.setText("");
        txtBP.setText("");

        populatePatTable();
    }//GEN-LAST:event_btnSavePatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDocSave;
    private javax.swing.JButton btnDocView;
    private javax.swing.JButton btnPatDelete;
    private javax.swing.JButton btnPatUpdate;
    private javax.swing.JButton btnPatView;
    private javax.swing.JButton btnSavePat;
    private javax.swing.JLabel errAge;
    private javax.swing.JLabel errCity;
    private javax.swing.JLabel errCom;
    private javax.swing.JLabel errDocCity;
    private javax.swing.JLabel errDocCom;
    private javax.swing.JLabel errDocName;
    private javax.swing.JLabel errName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblComm;
    private javax.swing.JLabel lblDTitle;
    private javax.swing.JLabel lblDocCity;
    private javax.swing.JLabel lblDocCom;
    private javax.swing.JLabel lblDocName;
    private javax.swing.JLabel lblHosp;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPTitle;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblRespRate;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JTable tblDoc;
    private javax.swing.JTable tblPat;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtComm;
    private javax.swing.JTextField txtDocCity;
    private javax.swing.JTextField txtDocCom;
    private javax.swing.JTextField txtDocHosp;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtRespRate;
    private javax.swing.JTextField txtTemp;
    // End of variables declaration//GEN-END:variables

    private void populateDocTable() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void populatePatTable() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
